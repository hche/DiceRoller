@inject IDataRepository repository;

@page "/"


@if (diceSets.Any())
{
    foreach (var diceSet in diceSets)
    {
        <DiceRoller.Pages.DiceSet Id="@(diceSet.Key)" Dices="@(diceSet.Value)" OnChange="OnDiceSetChange"></DiceRoller.Pages.DiceSet>
    }
}
else
{
    <i>Loading ...</i>
}


@code {

    Dictionary<Guid, List<Dice>> diceSets = new Dictionary<Guid, List<Dice>>();

    protected override async Task OnInitializedAsync()
    {
        diceSets = await repository.getAllDiceSets();

        if (!diceSets.Any())
        {
            await repository.addDiceSet(new List<Dice> { new Dice(6) });
            diceSets = await repository.getAllDiceSets();
        }
    }

    protected async Task OnDiceSetChange(Guid id)
    {
        await repository.updateDiceSet(id, diceSets[id]);
    }

}